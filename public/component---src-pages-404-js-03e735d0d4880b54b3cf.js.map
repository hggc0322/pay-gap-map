{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","linkStyle","margin","react_default","Navbar","fixed","bg","variant","Brand","gatsby_browser_entry","to","Toggle","aria-controls","Collapse","id","Nav","style","activeStyle","color","defaultProps","Layout","Fragment","header","site","siteMetadata","maxWidth","padding","paddingTop","Date","getFullYear","href","_755544856","node","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-03e735d0d4880b54b3cf.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport {Navbar, Nav}from \"react-bootstrap\"\n\nconst Header = ({ siteTitle }) => {\n  let linkStyle = {margin:'20px'};\n  return(\n   <header>\n    <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand><Link to=''>{siteTitle}</Link></Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav >\n      \n      <Link style ={linkStyle } to=\"/map\" activeStyle={{ color: \"#B01E1D\" }}> Map </Link>\n      <Link style ={linkStyle } to=\"/search\" activeStyle={{ color: \"#B01E1D\" }} >Company Search</Link>\n    </Nav>\n  </Navbar.Collapse>\n  </Navbar>\n  <br />      \n  </header>\n  \n);\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `80px auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          \n          \n          <main>{children}</main>\n  \n\n\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}