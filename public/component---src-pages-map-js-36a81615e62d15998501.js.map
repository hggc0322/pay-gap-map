{"version":3,"sources":["webpack:///./src/components/google-map.js","webpack:///./src/pages/map.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["MapContainer","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onMapClicked","inheritsLoose_default","prototype","render","google","react_default","a","createElement","dist","initialCenter","lat","lng","zoom","onClose","onInfoWindowClose","name","React","Component","GoogleApiWrapper","apiKey","MapPage","layout","google_map","id","seo","title","keywords","style","maxWidth","marginBottom","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","linkStyle","margin","Navbar","fixed","bg","variant","Brand","gatsby_browser_entry","to","Toggle","aria-controls","Collapse","Nav","activeStyle","color","defaultProps","Layout","Fragment","header","site","siteMetadata","padding","paddingTop","Date","getFullYear","href","_755544856","node","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-map-js-36a81615e62d15998501.js","sourcesContent":["import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport React from \"react\";\n\nexport class MapContainer extends React.Component {\n\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  };\n  render() {\n    const style = {\n  width: '50%',\n  height: '50%'\n}\n    if (!this.props.google) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <Map google={this.props.google} initialCenter={{\n            lat: 51.504831314 ,\n            lng: -0.123499506\n          }}zoom={10}>\n \n \n        <InfoWindow onClose={this.onInfoWindowClose}>\n            <div>\n              <h1>{this.state.selectedPlace.name}</h1>\n            </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n \nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyCAzvMKXYqfaZg2vIPcNPPcyZ9iclq_WFE')\n})(MapContainer)","import React from \"react\"\nimport MapContainer from \"../components/google-map\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst MapPage = () => (\n  <Layout>\n  \t<MapContainer id='map'/>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>   \n    </div>\n  </Layout>\n)\n\nexport default MapPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport {Navbar, Nav}from \"react-bootstrap\"\n\nconst Header = ({ siteTitle }) => {\n  let linkStyle = {margin:'20px'};\n  return(\n   <header>\n    <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand><Link to=''>{siteTitle}</Link></Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav >\n      \n      <Link style ={linkStyle } to=\"/map\" activeStyle={{ color: \"#B01E1D\" }}> Map </Link>\n      <Link style ={linkStyle } to=\"/search\" activeStyle={{ color: \"#B01E1D\" }} >Company Search</Link>\n    </Nav>\n  </Navbar.Collapse>\n  </Navbar>\n  <br />      \n  </header>\n  \n);\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `80px auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          \n          \n          <main>{children}</main>\n  \n\n\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}